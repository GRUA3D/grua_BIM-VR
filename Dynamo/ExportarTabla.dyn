{
  "Uuid": "9ab96705-fef9-4f98-b4ec-8708816f29c6",
  "IsCustomNode": false,
  "Description": "",
  "Name": "ExportarTabla",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 11,
      "SelectedString": "Multi-Category Schedule",
      "Id": "ea142d81f8104d5aba1c516e7689ac9a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fddf97ce9b024d148f3f95a3adf4a6e8",
          "Name": "Views",
          "Description": "The selected Views",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All views available in the current document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "Id": "fd87022eb8da4873931f00d1aab32a68",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0dadbaff7cee41b09d7c915b599bbd29",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system and returns its file path",
      "HintPath": "G:\\.shortcut-targets-by-id\\1-1GL2JnXldslyoZp2371o3-KXZSLV-et\\PROYECTO 3DP-GRUA UV\\DOCUMENTOS GEORGE\\Modelos\\Documentos Modelo\\ParametrosModelo-CasaRural_Feb.CSV",
      "InputValue": "..\\Modelos\\Documentos Modelo\\ParametrosModelo-CasaRural_Feb.CSV"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ba21e373a0674637b055383dc1cd43da",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a2d702c131e644399e504a98523b1ffc",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c7c0333d5404d4d8872a39817ceaf58",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70119027361641a0adbd80b3779425fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3a16d91ceb384f83af4267ec524d467b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f29409161ef40b49c70fe4a4be32105",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.UniqueId",
      "Replication": "Auto",
      "Description": "Get the Element Unique Id for this element\n\nElement.UniqueId: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b84fa5df6e00484ab0a3449562c8a8f6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "167a3a0615314c02ac62b2068ad30261",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6eb12020831a48e296b63fc0fddaa132",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b7cdae8a07647678e7388a9f83242bc",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "65227ef636c2424581240ade8048b4ae",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d95d3e6b6be4cd5b0413856c4981fea",
          "Name": "",
          "Description": "L",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db7635e5ac2b4e688ebfcaa838cb9f1e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "L=[\"Revit.ElementId\"];\n[\"\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7ac5dfbffb774298ac6d38efc82cf4b2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5badb09650b744c689ccf74d5cfb5361",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7f71911d2e741a7a02f2aaf4edce558",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "56431f75fd5347288d8e8ef6033793c8",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "525ea2989b8945608523bb50231367b3",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fce3e96f2ad477483d9ed7883d57db5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "List.Flatten(a,1);"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsInView, DSRevitNodesUI",
      "Id": "395479ab375a483582dcf0fddedb6567",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff459c74ae1148fc93d15becac916502",
          "Name": "elements",
          "Description": "All visible elements in the active view.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all the elements which are visible in the active view."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "11ff5245944e42b7a198fe0033d50b39",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4f029b7fc4b9480d9f88e1cec06530cd",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c548f2924164f0e99cbfb9e85616946",
          "Name": "data",
          "Description": "List of lists to write into CSV\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10a92c68641c420c87bb957c08130ee5",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSOffice.Data.ExportCSV@string,var[][]",
      "Replication": "Auto",
      "Description": "Write a list of lists into a file using a comma-separated values format. Outer list represents rows, inner lists represent columns.\n\nData.ExportCSV (filePath: string, data: var[][]): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6a5459583e0a413ab2a832081c2331c0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9e5ed3edc85b42d3a4cf890418a5b059",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a637c0ed07d4d1696a8c04b8428856a",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e4b7934fb5f4a6c81c16ae54df635c0",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e58d94d3f18a47b78ac8ccc10cb2ea4e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eea7db03864a4349ace67cca91e11be5",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "760297e97f49460fa77500a7d110e8aa",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3354c6efd6ef416cb43f82107144f73c",
          "Name": "refresh",
          "Description": "y Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21b44ac1dd4041cd98fffc52b230ea3d",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetData@Revit.Elements.Element,bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given Schedule or Electric Panel Schedule as strings. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetData (scheduleView: Element, removeHeading: bool = false, refresh: bool = true): string[][]"
    }
  ],
  "Connectors": [
    {
      "Start": "fddf97ce9b024d148f3f95a3adf4a6e8",
      "End": "eea7db03864a4349ace67cca91e11be5",
      "Id": "9d90010ab05e4201af78ddcd0358944b",
      "IsHidden": "False"
    },
    {
      "Start": "0dadbaff7cee41b09d7c915b599bbd29",
      "End": "4f029b7fc4b9480d9f88e1cec06530cd",
      "Id": "944bca5587704ee2947ae72549618c6d",
      "IsHidden": "False"
    },
    {
      "Start": "3c7c0333d5404d4d8872a39817ceaf58",
      "End": "4a637c0ed07d4d1696a8c04b8428856a",
      "Id": "287852394865491ea730a1e6fd6c020c",
      "IsHidden": "False"
    },
    {
      "Start": "6f29409161ef40b49c70fe4a4be32105",
      "End": "6eb12020831a48e296b63fc0fddaa132",
      "Id": "6f80886a99d34bfa9e84d21c037caa47",
      "IsHidden": "False"
    },
    {
      "Start": "0b7cdae8a07647678e7388a9f83242bc",
      "End": "525ea2989b8945608523bb50231367b3",
      "Id": "d8ce85ff791348d9aa1362ec477ac156",
      "IsHidden": "False"
    },
    {
      "Start": "db7635e5ac2b4e688ebfcaa838cb9f1e",
      "End": "167a3a0615314c02ac62b2068ad30261",
      "Id": "11d9d353d31b4858b36d960200ddf1d6",
      "IsHidden": "False"
    },
    {
      "Start": "c7f71911d2e741a7a02f2aaf4edce558",
      "End": "0c548f2924164f0e99cbfb9e85616946",
      "Id": "c613afe3090b411b80dfecbc15840a9d",
      "IsHidden": "False"
    },
    {
      "Start": "4fce3e96f2ad477483d9ed7883d57db5",
      "End": "9e5ed3edc85b42d3a4cf890418a5b059",
      "Id": "7e368d01487748f393c80dd8b191dde9",
      "IsHidden": "False"
    },
    {
      "Start": "ff459c74ae1148fc93d15becac916502",
      "End": "3a16d91ceb384f83af4267ec524d467b",
      "Id": "14c9e93c97cb4a5a82801955bc43ab3d",
      "IsHidden": "False"
    },
    {
      "Start": "1e4b7934fb5f4a6c81c16ae54df635c0",
      "End": "5badb09650b744c689ccf74d5cfb5361",
      "Id": "e8facea63f9a48fa897ace53edaffd7b",
      "IsHidden": "False"
    },
    {
      "Start": "21b44ac1dd4041cd98fffc52b230ea3d",
      "End": "a2d702c131e644399e504a98523b1ffc",
      "Id": "a7f36b41d123432184f2f30951c29ac8",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "4.2.4",
      "ReferenceType": "Package",
      "Nodes": [
        "e58d94d3f18a47b78ac8ccc10cb2ea4e"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "4.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.1.5096",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "ea142d81f8104d5aba1c516e7689ac9a",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1260.5198288299139,
        "Y": -172.30146109571609
      },
      {
        "Id": "fd87022eb8da4873931f00d1aab32a68",
        "Name": "File Path",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 993.02749499017386,
        "Y": -515.16214863037112
      },
      {
        "Id": "ba21e373a0674637b055383dc1cd43da",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1999.3425541952342,
        "Y": -118.55299057901814
      },
      {
        "Id": "70119027361641a0adbd80b3779425fa",
        "Name": "Element.UniqueId",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1347.688679577456,
        "Y": 364.50263138644959
      },
      {
        "Id": "b84fa5df6e00484ab0a3449562c8a8f6",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1663.8655226423896,
        "Y": 201.60240510491258
      },
      {
        "Id": "65227ef636c2424581240ade8048b4ae",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1321.5687100047617,
        "Y": 201.76628591624282
      },
      {
        "Id": "7ac5dfbffb774298ac6d38efc82cf4b2",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2633.1858129124771,
        "Y": -154.28588810878603
      },
      {
        "Id": "56431f75fd5347288d8e8ef6033793c8",
        "Name": "Aplanar lista",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1928.6745501058278,
        "Y": 199.27593983254371
      },
      {
        "Id": "395479ab375a483582dcf0fddedb6567",
        "Name": "All Elements In Active View",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1012.9514167594821,
        "Y": 365.36712247205833
      },
      {
        "Id": "11ff5245944e42b7a198fe0033d50b39",
        "Name": "Data.ExportCSV",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2695.8288701042011,
        "Y": -516.00338587135093
      },
      {
        "Id": "6a5459583e0a413ab2a832081c2331c0",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2372.9132622675193,
        "Y": -151.59952644399732
      },
      {
        "Id": "e58d94d3f18a47b78ac8ccc10cb2ea4e",
        "Name": "Schedule.GetData",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1639.6317040835261,
        "Y": -123.83183622227889
      }
    ],
    "Annotations": [
      {
        "Id": "e6abe059cb8d4b338169d71e058b5e93",
        "Title": "Obtener parametro, Revit.ElementID",
        "DescriptionText": "Se obtiene de los elementos activos en la vista de tabla de planificación",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "70119027361641a0adbd80b3779425fa",
          "b84fa5df6e00484ab0a3449562c8a8f6",
          "65227ef636c2424581240ade8048b4ae",
          "56431f75fd5347288d8e8ef6033793c8",
          "395479ab375a483582dcf0fddedb6567"
        ],
        "HasNestedGroups": false,
        "Left": 1002.9514167594821,
        "Top": 126.27593983254371,
        "Width": 1189.7231333463455,
        "Height": 371.09118263951461,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 199.27593983254371,
        "InitialHeight": 311.09118263951461,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "202d6ce3a52c4e4c8d76f815c3783723",
        "Title": "Obtiene tabla en forma de lista",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ea142d81f8104d5aba1c516e7689ac9a",
          "ba21e373a0674637b055383dc1cd43da"
        ],
        "HasNestedGroups": false,
        "Left": 1250.5198288299139,
        "Top": -245.30146109571609,
        "Width": 939.82272536532037,
        "Height": 258.74847051669792,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -172.30146109571609,
        "InitialHeight": 198.74847051669795,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1873.5522228862706,
    "Y": 582.34858180656738,
    "Zoom": 0.94007755237935475
  }
}